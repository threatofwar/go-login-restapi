# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Init
      run: go mod init threatofwar/go-login-restapi

    - name: Add dependencies
      run: go mod tidy
      
    - name: Build
      run: go build -v ./...

    - name: Run application
      run: |
        nohup go run main.go > server.log 2>&1 &
        echo $! > server.pid
        sleep 5

    - name: Test login endpoint
      run: |
        response=$(curl -X POST http://localhost:8080/api/login \
          -H "Content-Type: application/json" \
          -d '{"username": "user", "password": "123"}')
        echo "Response: $response"
        ACCESS_TOKEN=$(echo $response | jq -r '.access_token')
        REFRESH_TOKEN=$(echo $response | jq -r '.refresh_token')
        echo "Access Token: $ACCESS_TOKEN"
        echo "Refresh Token: $REFRESH_TOKEN"
        echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
        echo "REFRESH_TOKEN=$REFRESH_TOKEN" >> $GITHUB_ENV

    
    - name: Test profile endpoint
      run: |
        if [ -z "$ACCESS_TOKEN" ]; then
          echo "Access token is empty. Login failed."
          exit 1
        fi
        profile_response=$(curl -X GET http://localhost:8080/api/auth/profile \
          -H "Authorization: Bearer $ACCESS_TOKEN")
        echo $profile_response

    - name: Test refresh token endpoint
      run: |
        if [ -z "$REFRESH_TOKEN" ]; then
          echo "Refresh token is empty. Login failed."
          exit 1
        fi
        refresh_response=$(curl -X POST http://localhost:8080/api/refresh-token \
          -H "Content-Type: application/json" \
          -d '{"refresh_token": "'$REFRESH_TOKEN'"}')
        echo "Refresh Response: $refresh_response"
        NEW_ACCESS_TOKEN=$(echo $refresh_response | jq -r '.access_token')
        echo "NEW_ACCESS_TOKEN=$NEW_ACCESS_TOKEN"
        echo "NEW_ACCESS_TOKEN=$NEW_ACCESS_TOKEN" >> $GITHUB_ENV

    - name: Re-Test profile endpoint with new access token
      run: |
        if [ -z "$NEW_ACCESS_TOKEN" ]; then
          echo "New Access token is empty. Refresh failed."
          exit 1
        fi
        profile_response=$(curl -X GET http://localhost:8080/api/auth/profile \
          -H "Authorization: Bearer $NEW_ACCESS_TOKEN")
        echo $profile_response

    - name: Test
      run: go test -v ./...
